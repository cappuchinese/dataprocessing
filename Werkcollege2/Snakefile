configfile: "./config/config.yaml"

rule all:
    input:
        expand("mapped_reads/{sample}.bam", sample=config['samples']),
        expand("sorted_reads/{sample}.bam", sample=config['samples']),
        expand("sorted_reads/{sample}.bam.bai", sample=config['samples']),
        "calls/all.vcf",
        "output.html"

rule bwa_map:
    input:
        "data/genome.fa",
        "data/samples/{sample}.fastq"
    output:
        "mapped_reads/{sample}.bam"
    conda:
        "envs/mapping.yaml"
    log:
        "logs/bwa.{sample}.log"
    shell:
        "(bwa mem {input} | samtools view -Sb - > {output}) >{log} 2>&1"

rule sam_sort:
    input:
        "mapped_reads/{sample}.bam"
    output:
        "sorted_reads/{sample}.bam"
    conda:
        "envs/sort_index.yaml"
    log:
        "logs/sort.{sample}.log"
    shell:
        "(samtools sort -T sorted_reads/{wildcards.sample} -O bam {input} > {output}) >{log} 2>&1"

rule sam_index:
    input:
        "sorted_reads/{sample}.bam"
    output:
        "sorted_reads/{sample}.bam.bai"
    log:
        "logs/index.{sample}.log"
    shell:
        "(samtools index {input}) >{log} 2>&1"

rule bcf_call:
    input:
        fa="data/genome.fa",
        bam=expand("sorted_reads/{sample}.bam", sample=config['samples']),
        bai=expand("sorted_reads/{sample}.bam.bai", sample=config['samples'])
    output:
        "calls/all.vcf"
    log:
        "logs/call.log"
    shell:
        "(samtools mpileup -g -f {input.fa} {input.bam} | bcftools call -mv - > {output}) >{log} 2>&1"

rule report:
    input:
        call="calls/all.vcf"
    output:
        html="output.html"
    run:
        from snakemake.utils import report
        with open(input.call) as f:
            n_calls = sum(1 for line in f if not line.startswith("#"))

        report("""
                An example workflow
                ===================================

                Reads were mapped to the Yeas reference genome 
                and variants were called jointly with
                SAMtools/BCFtools.

                This resulted in {n_calls} variants (see Table T1_).
                """,output.html,metadata="Author: Mr Pipeline",T1=input.call)
